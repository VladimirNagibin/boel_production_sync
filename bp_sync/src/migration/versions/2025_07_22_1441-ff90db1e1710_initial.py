"""Initial

Revision ID: ff90db1e1710
Revises:
Create Date: 2025-07-22 14:41:54.039053

"""

from typing import Any, Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

from models.references import (
    CATEGORY_VALUES,
    CONTACT_TYPE_VALUES,
    CREATION_SOURCE_VALUES,
    CURRENCY_VALUES,
    DEAL_FAILURE_REASON_VALUES,
    DEAL_STAGE_VALUES,
    DEAL_TYPE_VALUES,
    DEFECT_TYPE_VALUES,
    EMPLORRS_VALUES,
    INDUSTRY_VALUES,
    INVOICE_STAGE_VALUES,
    LEAD_STATUS_VALUES,
    MAIN_ACTIVITY_VALUES,
    SHIPPING_COMPANY_VALUES,
    SOURCE_VALUES,
    WAREHOUSE_VALUES,
)


def bulk_insert(
    table_name: str, columns: list[str], data: list[tuple[Any, ...]]
) -> None:
    """
    Универсальная функция для вставки данных
    :param table_name: Имя таблицы
    :param columns: Список колонок
    :param data: Итерируемый объект с кортежами данных
    """
    rows: list[str] = []
    for row in data:
        formatted_values: list[str] = []
        for value in row:
            if value is None:
                formatted_values.append("NULL")
            elif isinstance(value, (int, float)):
                formatted_values.append(str(value))
            else:
                # Экранирование одинарных кавычек и оборачивание строк
                escaped = str(value).replace("'", "''")
                formatted_values.append(f"'{escaped}'")
        rows.append(f"({', '.join(formatted_values)})")

    values_str = ", ".join(rows)
    columns_str = ", ".join([f'"{col}"' for col in columns])
    query = f"INSERT INTO {table_name} ({columns_str}) VALUES {values_str}"
    op.execute(sa.text(query))


# revision identifiers, used by Alembic.
revision: str = "ff90db1e1710"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "currencies",
        sa.Column("rate", sa.Float(), nullable=False, comment="Курс валюты"),
        sa.Column("nominal", sa.Integer(), nullable=False, comment="Номинал"),
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "categories",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "deal_failure_reasons",
        sa.Column(
            "ext_alt_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи с лидом",
        ),
        sa.Column(
            "ext_alt2_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи с контактом",
        ),
        sa.Column(
            "ext_alt3_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи с компанией",
        ),
        sa.Column(
            "ext_alt4_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи со счётом",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ext_alt2_id"),
        sa.UniqueConstraint("ext_alt3_id"),
        sa.UniqueConstraint("ext_alt4_id"),
        sa.UniqueConstraint("ext_alt_id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "deal_stages",
        sa.Column(
            "sort_order",
            sa.Integer(),
            nullable=False,
            comment="Порядковый номер стадии",
        ),
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
        sa.UniqueConstraint("sort_order"),
    )
    op.create_table(
        "deal_types",
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "employees",
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "industries",
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "main_activites",
        sa.Column(
            "ext_alt_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи с лидом",
        ),
        sa.Column(
            "ext_alt2_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи с контактом",
        ),
        sa.Column(
            "ext_alt3_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи с компанией",
        ),
        sa.Column(
            "ext_alt4_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи со счётом",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ext_alt2_id"),
        sa.UniqueConstraint("ext_alt3_id"),
        sa.UniqueConstraint("ext_alt4_id"),
        sa.UniqueConstraint("ext_alt_id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "shipping_companies",
        sa.Column(
            "ext_alt_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи с компанией",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ext_alt_id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "sources",
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "warehouses",
        sa.Column(
            "ext_alt_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи со счётом",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ext_alt_id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "communication_channel_types",
        sa.Column(
            "type_id",
            sa.String(length=20),
            nullable=False,
            comment="Тип коммуникации",
        ),
        sa.Column(
            "value_type",
            sa.String(length=50),
            nullable=False,
            comment="Уточнение типа коммуникации по каналу",
        ),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "type_id", "value_type", name="uq_channel_type_value_type"
        ),
    )
    op.create_table(
        "departments",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "users",
        sa.Column("xml_id", sa.String(), nullable=True, comment="Внешний код"),
        sa.Column("name", sa.String(), nullable=True, comment="Имя"),
        sa.Column(
            "second_name", sa.String(), nullable=True, comment="Отчество"
        ),
        sa.Column("last_name", sa.String(), nullable=True, comment="Фамилия"),
        sa.Column(
            "personal_gender", sa.String(), nullable=True, comment="Пол"
        ),
        sa.Column(
            "work_position", sa.String(), nullable=True, comment="Должность"
        ),
        sa.Column(
            "user_type", sa.String(), nullable=True, comment="Тип пользователя"
        ),
        sa.Column(
            "active", sa.Boolean(), nullable=False, comment="Активность"
        ),
        sa.Column("is_online", sa.Boolean(), nullable=False, comment="Онлайн"),
        sa.Column(
            "last_login",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Последняя авторизация",
        ),
        sa.Column(
            "date_register",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата регистрации",
        ),
        sa.Column(
            "personal_birthday",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата рождения",
        ),
        sa.Column(
            "employment_date",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Новая дата",
        ),
        sa.Column(
            "date_new",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Новая дата",
        ),
        sa.Column(
            "time_zone", sa.String(), nullable=True, comment="Часовой пояс"
        ),
        sa.Column(
            "personal_city",
            sa.String(),
            nullable=True,
            comment="Город проживания",
        ),
        sa.Column("email", sa.String(), nullable=True, comment="E-Mail"),
        sa.Column(
            "personal_mobile",
            sa.String(),
            nullable=True,
            comment="Личный мобильный",
        ),
        sa.Column(
            "work_phone",
            sa.String(),
            nullable=True,
            comment="Телефон компании",
        ),
        sa.Column(
            "personal_www",
            sa.String(),
            nullable=True,
            comment="Домашняя страничка",
        ),
        sa.Column("department_id", sa.Integer(), nullable=True),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.external_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "contact_types",
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "companies",
        sa.Column(
            "title", sa.String(), nullable=False, comment="Название сделки"
        ),
        sa.Column(
            "origin_version",
            sa.String(),
            nullable=True,
            comment="Версия данных о контакте во внешней системе",
        ),
        sa.Column(
            "banking_details",
            sa.String(),
            nullable=True,
            comment="Банковские реквизиты",
        ),
        sa.Column(
            "revenue", sa.Float(), nullable=False, comment="Годовой оборот"
        ),
        sa.Column(
            "address_legal",
            sa.String(),
            nullable=True,
            comment="Юридический адрес",
        ),
        sa.Column(
            "address_company",
            sa.String(),
            nullable=True,
            comment="Адрес (компания)",
        ),
        sa.Column(
            "province_company",
            sa.String(),
            nullable=True,
            comment="Область (Край)",
        ),
        sa.Column(
            "is_my_company",
            sa.Boolean(),
            nullable=False,
            comment="Моя компания",
        ),
        sa.Column(
            "is_shipment_approved",
            sa.Boolean(),
            nullable=True,
            comment="Разрешение на отгрузку",
        ),
        sa.Column(
            "date_last_shipment",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата последней отгрузки",
        ),
        sa.Column("currency_id", sa.String(), nullable=True),
        sa.Column("company_type_id", sa.String(), nullable=True),
        sa.Column("contact_id", sa.Integer(), nullable=True),
        sa.Column("lead_id", sa.Integer(), nullable=True),
        sa.Column("source_id", sa.String(), nullable=True),
        sa.Column("main_activity_id", sa.Integer(), nullable=True),
        sa.Column("deal_failure_reason_id", sa.Integer(), nullable=True),
        sa.Column("deal_type_id", sa.String(), nullable=True),
        sa.Column("shipping_company_id", sa.Integer(), nullable=True),
        sa.Column("industry_id", sa.String(), nullable=True),
        sa.Column("employees_id", sa.String(), nullable=True),
        sa.Column("parent_company_id", sa.Integer(), nullable=True),
        sa.Column(
            "position_head",
            sa.String(),
            nullable=True,
            comment="Должность руководителя",
        ),
        sa.Column(
            "basis_operates",
            sa.String(),
            nullable=True,
            comment="Основание деятельности предприятия",
        ),
        sa.Column(
            "position_head_genitive",
            sa.String(),
            nullable=True,
            comment="Должность руководителя родительный падеж",
        ),
        sa.Column(
            "basis_operates_genitive",
            sa.String(),
            nullable=True,
            comment="Основание деятельности предприятия родительный падеж",
        ),
        sa.Column(
            "payment_delay_genitive",
            sa.String(),
            nullable=True,
            comment="Отсрочка родительный падеж",
        ),
        sa.Column(
            "full_name_genitive",
            sa.String(),
            nullable=True,
            comment="ФИО родительный падеж",
        ),
        sa.Column(
            "current_contract",
            sa.String(),
            nullable=True,
            comment="Текущий договор",
        ),
        sa.Column(
            "current_number_contract",
            sa.String(),
            nullable=True,
            comment="Текущий номер договора",
        ),
        sa.Column(
            "originator_id",
            sa.String(),
            nullable=True,
            comment="ID источника данных",
        ),
        sa.Column(
            "origin_id",
            sa.String(),
            nullable=True,
            comment="ID элемента в источнике",
        ),
        sa.Column(
            "comments", sa.String(), nullable=True, comment="Комментарии"
        ),
        sa.Column(
            "source_description",
            sa.String(),
            nullable=True,
            comment="Описание источника",
        ),
        sa.Column(
            "source_external",
            sa.String(),
            nullable=True,
            comment="Внешний источник",
        ),
        sa.Column("city", sa.String(), nullable=True, comment="Город"),
        sa.Column(
            "opened", sa.Boolean(), nullable=False, comment="Доступна для всех"
        ),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.Column(
            "date_create",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата создания",
        ),
        sa.Column(
            "date_modify",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата изменения",
        ),
        sa.Column(
            "last_activity_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Время последней активности",
        ),
        sa.Column(
            "last_communication_time",
            sa.DateTime(),
            nullable=True,
            comment="Время последней коммуникации",
        ),
        sa.Column(
            "assigned_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID ответственного",
        ),
        sa.Column(
            "created_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID создателя",
        ),
        sa.Column(
            "modify_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID изменившего",
        ),
        sa.Column(
            "last_activity_by",
            sa.Integer(),
            nullable=True,
            comment="ID последней активности",
        ),
        sa.Column(
            "mgo_cc_entry_id", sa.String(), nullable=True, comment="ID звонка"
        ),
        sa.Column(
            "mgo_cc_channel_type",
            sa.String(),
            nullable=True,
            comment="Канал обращения",
        ),
        sa.Column(
            "mgo_cc_result",
            sa.String(),
            nullable=True,
            comment="Результат обращения",
        ),
        sa.Column(
            "mgo_cc_entry_point",
            sa.String(),
            nullable=True,
            comment="Точка входа обращения",
        ),
        sa.Column(
            "mgo_cc_create",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время создания обращения",
        ),
        sa.Column(
            "mgo_cc_end",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время завершения обращения",
        ),
        sa.Column(
            "mgo_cc_tag_id",
            sa.String(),
            nullable=True,
            comment="Тематики обращения",
        ),
        sa.Column(
            "calltouch_site_id",
            sa.String(),
            nullable=True,
            comment="ID сайта в Calltouch",
        ),
        sa.Column(
            "calltouch_call_id",
            sa.String(),
            nullable=True,
            comment="ID звонка в Calltouch",
        ),
        sa.Column(
            "calltouch_request_id",
            sa.String(),
            nullable=True,
            comment="ID заявки в Calltouch",
        ),
        sa.Column(
            "wz_instagram", sa.String(), nullable=True, comment="Instagram"
        ),
        sa.Column("wz_vc", sa.String(), nullable=True, comment="VC"),
        sa.Column(
            "wz_telegram_username",
            sa.String(),
            nullable=True,
            comment="Telegram username",
        ),
        sa.Column(
            "wz_telegram_id", sa.String(), nullable=True, comment="Telegram Id"
        ),
        sa.Column("wz_avito", sa.String(), nullable=True, comment="Avito"),
        sa.Column(
            "utm_source",
            sa.String(),
            nullable=True,
            comment="Рекламная система",
        ),
        sa.Column(
            "utm_medium", sa.String(), nullable=True, comment="Тип трафика"
        ),
        sa.Column(
            "utm_campaign",
            sa.String(),
            nullable=True,
            comment="Обозначение рекламной кампании",
        ),
        sa.Column(
            "utm_content",
            sa.String(),
            nullable=True,
            comment="Содержание кампании",
        ),
        sa.Column(
            "utm_term", sa.String(), nullable=True, comment="Тип трафика"
        ),
        sa.Column(
            "has_phone",
            sa.Boolean(),
            nullable=False,
            comment="Признак заполненности поля\xa0телефон",
        ),
        sa.Column(
            "has_email",
            sa.Boolean(),
            nullable=False,
            comment="Признак заполненности электронной почты",
        ),
        sa.Column(
            "has_imol",
            sa.Boolean(),
            nullable=False,
            comment="Признак наличия привязанной открытой линии",
        ),
        sa.Column(
            "address", sa.String(), nullable=True, comment="Адрес контакта"
        ),
        sa.Column(
            "address_2",
            sa.String(),
            nullable=True,
            comment="Вторая страница адреса",
        ),
        sa.Column("address_city", sa.String(), nullable=True, comment="Город"),
        sa.Column(
            "address_postal_code",
            sa.String(),
            nullable=True,
            comment="Почтовый индекс",
        ),
        sa.Column(
            "address_region", sa.String(), nullable=True, comment="Район"
        ),
        sa.Column(
            "address_province", sa.String(), nullable=True, comment="Область"
        ),
        sa.Column(
            "address_country", sa.String(), nullable=True, comment="Страна"
        ),
        sa.Column(
            "address_country_code",
            sa.String(),
            nullable=True,
            comment="Код страны",
        ),
        sa.Column(
            "address_loc_addr_id",
            sa.Integer(),
            nullable=True,
            comment="Идентификатор адреса из модуля местоположений",
        ),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["company_type_id"],
            ["contact_types.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currencies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["deal_failure_reason_id"],
            ["deal_failure_reasons.ext_alt3_id"],
        ),
        sa.ForeignKeyConstraint(
            ["deal_type_id"],
            ["deal_types.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["employees_id"],
            ["employees.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["industry_id"],
            ["industries.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["last_activity_by"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["main_activity_id"],
            ["main_activites.ext_alt3_id"],
        ),
        sa.ForeignKeyConstraint(
            ["modify_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_company_id"],
            ["companies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["shipping_company_id"],
            ["shipping_companies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["sources.external_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "contacts",
        sa.Column("name", sa.String(), nullable=True, comment="Имя контакта"),
        sa.Column(
            "second_name",
            sa.String(),
            nullable=True,
            comment="Отчество контакта",
        ),
        sa.Column(
            "last_name", sa.String(), nullable=True, comment="Фамилия контакта"
        ),
        sa.Column("post", sa.String(), nullable=True, comment="Должность"),
        sa.Column(
            "origin_version",
            sa.String(),
            nullable=True,
            comment="Версия данных о контакте во внешней системе",
        ),
        sa.Column(
            "export",
            sa.Boolean(),
            nullable=False,
            comment="Участвует в экспорте контактов",
        ),
        sa.Column(
            "is_shipment_approved",
            sa.Boolean(),
            nullable=True,
            comment="Разрешение на отгрузку",
        ),
        sa.Column(
            "birthdate",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата рождения",
        ),
        sa.Column("type_id", sa.String(), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("lead_id", sa.Integer(), nullable=True),
        sa.Column("source_id", sa.String(), nullable=True),
        sa.Column("main_activity_id", sa.Integer(), nullable=True),
        sa.Column("deal_failure_reason_id", sa.Integer(), nullable=True),
        sa.Column("deal_type_id", sa.String(), nullable=True),
        sa.Column(
            "originator_id",
            sa.String(),
            nullable=True,
            comment="ID источника данных",
        ),
        sa.Column(
            "origin_id",
            sa.String(),
            nullable=True,
            comment="ID элемента в источнике",
        ),
        sa.Column(
            "comments", sa.String(), nullable=True, comment="Комментарии"
        ),
        sa.Column(
            "source_description",
            sa.String(),
            nullable=True,
            comment="Описание источника",
        ),
        sa.Column(
            "source_external",
            sa.String(),
            nullable=True,
            comment="Внешний источник",
        ),
        sa.Column("city", sa.String(), nullable=True, comment="Город"),
        sa.Column(
            "opened", sa.Boolean(), nullable=False, comment="Доступна для всех"
        ),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.Column(
            "date_create",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата создания",
        ),
        sa.Column(
            "date_modify",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата изменения",
        ),
        sa.Column(
            "last_activity_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Время последней активности",
        ),
        sa.Column(
            "last_communication_time",
            sa.DateTime(),
            nullable=True,
            comment="Время последней коммуникации",
        ),
        sa.Column(
            "assigned_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID ответственного",
        ),
        sa.Column(
            "created_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID создателя",
        ),
        sa.Column(
            "modify_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID изменившего",
        ),
        sa.Column(
            "last_activity_by",
            sa.Integer(),
            nullable=True,
            comment="ID последней активности",
        ),
        sa.Column(
            "mgo_cc_entry_id", sa.String(), nullable=True, comment="ID звонка"
        ),
        sa.Column(
            "mgo_cc_channel_type",
            sa.String(),
            nullable=True,
            comment="Канал обращения",
        ),
        sa.Column(
            "mgo_cc_result",
            sa.String(),
            nullable=True,
            comment="Результат обращения",
        ),
        sa.Column(
            "mgo_cc_entry_point",
            sa.String(),
            nullable=True,
            comment="Точка входа обращения",
        ),
        sa.Column(
            "mgo_cc_create",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время создания обращения",
        ),
        sa.Column(
            "mgo_cc_end",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время завершения обращения",
        ),
        sa.Column(
            "mgo_cc_tag_id",
            sa.String(),
            nullable=True,
            comment="Тематики обращения",
        ),
        sa.Column(
            "calltouch_site_id",
            sa.String(),
            nullable=True,
            comment="ID сайта в Calltouch",
        ),
        sa.Column(
            "calltouch_call_id",
            sa.String(),
            nullable=True,
            comment="ID звонка в Calltouch",
        ),
        sa.Column(
            "calltouch_request_id",
            sa.String(),
            nullable=True,
            comment="ID заявки в Calltouch",
        ),
        sa.Column(
            "wz_instagram", sa.String(), nullable=True, comment="Instagram"
        ),
        sa.Column("wz_vc", sa.String(), nullable=True, comment="VC"),
        sa.Column(
            "wz_telegram_username",
            sa.String(),
            nullable=True,
            comment="Telegram username",
        ),
        sa.Column(
            "wz_telegram_id", sa.String(), nullable=True, comment="Telegram Id"
        ),
        sa.Column("wz_avito", sa.String(), nullable=True, comment="Avito"),
        sa.Column(
            "utm_source",
            sa.String(),
            nullable=True,
            comment="Рекламная система",
        ),
        sa.Column(
            "utm_medium", sa.String(), nullable=True, comment="Тип трафика"
        ),
        sa.Column(
            "utm_campaign",
            sa.String(),
            nullable=True,
            comment="Обозначение рекламной кампании",
        ),
        sa.Column(
            "utm_content",
            sa.String(),
            nullable=True,
            comment="Содержание кампании",
        ),
        sa.Column(
            "utm_term", sa.String(), nullable=True, comment="Тип трафика"
        ),
        sa.Column(
            "has_phone",
            sa.Boolean(),
            nullable=False,
            comment="Признак заполненности поля\xa0телефон",
        ),
        sa.Column(
            "has_email",
            sa.Boolean(),
            nullable=False,
            comment="Признак заполненности электронной почты",
        ),
        sa.Column(
            "has_imol",
            sa.Boolean(),
            nullable=False,
            comment="Признак наличия привязанной открытой линии",
        ),
        sa.Column(
            "address", sa.String(), nullable=True, comment="Адрес контакта"
        ),
        sa.Column(
            "address_2",
            sa.String(),
            nullable=True,
            comment="Вторая страница адреса",
        ),
        sa.Column("address_city", sa.String(), nullable=True, comment="Город"),
        sa.Column(
            "address_postal_code",
            sa.String(),
            nullable=True,
            comment="Почтовый индекс",
        ),
        sa.Column(
            "address_region", sa.String(), nullable=True, comment="Район"
        ),
        sa.Column(
            "address_province", sa.String(), nullable=True, comment="Область"
        ),
        sa.Column(
            "address_country", sa.String(), nullable=True, comment="Страна"
        ),
        sa.Column(
            "address_country_code",
            sa.String(),
            nullable=True,
            comment="Код страны",
        ),
        sa.Column(
            "address_loc_addr_id",
            sa.Integer(),
            nullable=True,
            comment="Идентификатор адреса из модуля местоположений",
        ),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["deal_failure_reason_id"],
            ["deal_failure_reasons.ext_alt2_id"],
        ),
        sa.ForeignKeyConstraint(
            ["deal_type_id"],
            ["deal_types.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["last_activity_by"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["main_activity_id"],
            ["main_activites.ext_alt2_id"],
        ),
        sa.ForeignKeyConstraint(
            ["modify_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["sources.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["contact_types.external_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "creation_sources",
        sa.Column(
            "ext_alt_id",
            sa.Integer(),
            nullable=False,
            comment="id для связи со счётом",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ext_alt_id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "invoice_stages",
        sa.Column(
            "sort_order",
            sa.Integer(),
            nullable=False,
            comment="Порядковый номер",
        ),
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
        sa.UniqueConstraint("sort_order"),
    )
    op.create_table(
        "lead_statuses",
        sa.Column(
            "sort_order",
            sa.Integer(),
            nullable=False,
            comment="Порядковый номер",
        ),
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
        sa.UniqueConstraint("sort_order"),
    )
    op.create_table(
        "leads",
        sa.Column(
            "title", sa.String(), nullable=False, comment="Название лида"
        ),
        sa.Column("name", sa.String(), nullable=True, comment="Имя контакта"),
        sa.Column(
            "second_name",
            sa.String(),
            nullable=True,
            comment="Отчество контакта",
        ),
        sa.Column(
            "last_name", sa.String(), nullable=True, comment="Фамилия контакта"
        ),
        sa.Column("post", sa.String(), nullable=True, comment="Должность"),
        sa.Column(
            "company_title",
            sa.String(),
            nullable=True,
            comment="Название компании, привязанной к лиду",
        ),
        sa.Column(
            "is_manual_opportunity",
            sa.Boolean(),
            nullable=False,
            comment="Ручной ввод суммы",
        ),
        sa.Column(
            "is_return_customer",
            sa.Boolean(),
            nullable=False,
            comment="Повторный клиент",
        ),
        sa.Column(
            "is_shipment_approved",
            sa.Boolean(),
            nullable=True,
            comment="Разрешение на отгрузку",
        ),
        sa.Column(
            "opportunity", sa.Float(), nullable=False, comment="Сумма сделки"
        ),
        sa.Column(
            "birthdate",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата рождения",
        ),
        sa.Column(
            "moved_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Время перемещения",
        ),
        sa.Column(
            "date_closed",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата закрытия",
        ),
        sa.Column(
            "status_description",
            sa.String(),
            nullable=True,
            comment="Дополнительно о стадии",
        ),
        sa.Column(
            "status_semantic_id",
            postgresql.ENUM(
                "PROSPECTIVE", "SUCCESS", "FAIL", name="deal_stage_enum"
            ),
            nullable=False,
            comment="Семантика стадии",
        ),
        sa.Column("currency_id", sa.String(), nullable=True),
        sa.Column("type_id", sa.String(), nullable=True),
        sa.Column("status_id", sa.String(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("contact_id", sa.Integer(), nullable=True),
        sa.Column("source_id", sa.String(), nullable=True),
        sa.Column("main_activity_id", sa.Integer(), nullable=True),
        sa.Column("deal_failure_reason_id", sa.Integer(), nullable=True),
        sa.Column(
            "moved_by_id",
            sa.Integer(),
            nullable=True,
            comment="ID переместившего",
        ),
        sa.Column(
            "yaclientid", sa.String(), nullable=True, comment="yaclientid"
        ),
        sa.Column(
            "originator_id",
            sa.String(),
            nullable=True,
            comment="ID источника данных",
        ),
        sa.Column(
            "origin_id",
            sa.String(),
            nullable=True,
            comment="ID элемента в источнике",
        ),
        sa.Column(
            "comments", sa.String(), nullable=True, comment="Комментарии"
        ),
        sa.Column(
            "source_description",
            sa.String(),
            nullable=True,
            comment="Описание источника",
        ),
        sa.Column(
            "source_external",
            sa.String(),
            nullable=True,
            comment="Внешний источник",
        ),
        sa.Column("city", sa.String(), nullable=True, comment="Город"),
        sa.Column(
            "opened", sa.Boolean(), nullable=False, comment="Доступна для всех"
        ),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.Column(
            "date_create",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата создания",
        ),
        sa.Column(
            "date_modify",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата изменения",
        ),
        sa.Column(
            "last_activity_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Время последней активности",
        ),
        sa.Column(
            "last_communication_time",
            sa.DateTime(),
            nullable=True,
            comment="Время последней коммуникации",
        ),
        sa.Column(
            "assigned_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID ответственного",
        ),
        sa.Column(
            "created_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID создателя",
        ),
        sa.Column(
            "modify_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID изменившего",
        ),
        sa.Column(
            "last_activity_by",
            sa.Integer(),
            nullable=True,
            comment="ID последней активности",
        ),
        sa.Column(
            "mgo_cc_entry_id", sa.String(), nullable=True, comment="ID звонка"
        ),
        sa.Column(
            "mgo_cc_channel_type",
            sa.String(),
            nullable=True,
            comment="Канал обращения",
        ),
        sa.Column(
            "mgo_cc_result",
            sa.String(),
            nullable=True,
            comment="Результат обращения",
        ),
        sa.Column(
            "mgo_cc_entry_point",
            sa.String(),
            nullable=True,
            comment="Точка входа обращения",
        ),
        sa.Column(
            "mgo_cc_create",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время создания обращения",
        ),
        sa.Column(
            "mgo_cc_end",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время завершения обращения",
        ),
        sa.Column(
            "mgo_cc_tag_id",
            sa.String(),
            nullable=True,
            comment="Тематики обращения",
        ),
        sa.Column(
            "calltouch_site_id",
            sa.String(),
            nullable=True,
            comment="ID сайта в Calltouch",
        ),
        sa.Column(
            "calltouch_call_id",
            sa.String(),
            nullable=True,
            comment="ID звонка в Calltouch",
        ),
        sa.Column(
            "calltouch_request_id",
            sa.String(),
            nullable=True,
            comment="ID заявки в Calltouch",
        ),
        sa.Column(
            "wz_instagram", sa.String(), nullable=True, comment="Instagram"
        ),
        sa.Column("wz_vc", sa.String(), nullable=True, comment="VC"),
        sa.Column(
            "wz_telegram_username",
            sa.String(),
            nullable=True,
            comment="Telegram username",
        ),
        sa.Column(
            "wz_telegram_id", sa.String(), nullable=True, comment="Telegram Id"
        ),
        sa.Column("wz_avito", sa.String(), nullable=True, comment="Avito"),
        sa.Column(
            "utm_source",
            sa.String(),
            nullable=True,
            comment="Рекламная система",
        ),
        sa.Column(
            "utm_medium", sa.String(), nullable=True, comment="Тип трафика"
        ),
        sa.Column(
            "utm_campaign",
            sa.String(),
            nullable=True,
            comment="Обозначение рекламной кампании",
        ),
        sa.Column(
            "utm_content",
            sa.String(),
            nullable=True,
            comment="Содержание кампании",
        ),
        sa.Column(
            "utm_term", sa.String(), nullable=True, comment="Тип трафика"
        ),
        sa.Column(
            "has_phone",
            sa.Boolean(),
            nullable=False,
            comment="Признак заполненности поля\xa0телефон",
        ),
        sa.Column(
            "has_email",
            sa.Boolean(),
            nullable=False,
            comment="Признак заполненности электронной почты",
        ),
        sa.Column(
            "has_imol",
            sa.Boolean(),
            nullable=False,
            comment="Признак наличия привязанной открытой линии",
        ),
        sa.Column(
            "address", sa.String(), nullable=True, comment="Адрес контакта"
        ),
        sa.Column(
            "address_2",
            sa.String(),
            nullable=True,
            comment="Вторая страница адреса",
        ),
        sa.Column("address_city", sa.String(), nullable=True, comment="Город"),
        sa.Column(
            "address_postal_code",
            sa.String(),
            nullable=True,
            comment="Почтовый индекс",
        ),
        sa.Column(
            "address_region", sa.String(), nullable=True, comment="Район"
        ),
        sa.Column(
            "address_province", sa.String(), nullable=True, comment="Область"
        ),
        sa.Column(
            "address_country", sa.String(), nullable=True, comment="Страна"
        ),
        sa.Column(
            "address_country_code",
            sa.String(),
            nullable=True,
            comment="Код страны",
        ),
        sa.Column(
            "address_loc_addr_id",
            sa.Integer(),
            nullable=True,
            comment="Идентификатор адреса из модуля местоположений",
        ),
        sa.CheckConstraint(
            "opportunity >= 0", name="non_negative_opportunity"
        ),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currencies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["deal_failure_reason_id"],
            ["deal_failure_reasons.ext_alt_id"],
        ),
        sa.ForeignKeyConstraint(
            ["last_activity_by"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["main_activity_id"],
            ["main_activites.ext_alt_id"],
        ),
        sa.ForeignKeyConstraint(
            ["modify_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["moved_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["sources.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["lead_statuses.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["deal_types.external_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "communication_channels",
        sa.Column(
            "entity_type",
            sa.String(length=20),
            nullable=False,
            comment="Тип сущности",
        ),
        sa.Column(
            "entity_id",
            sa.Integer(),
            nullable=False,
            comment="Внешний ID соответствующей сущности",
        ),
        sa.Column("channel_type_id", sa.UUID(), nullable=False),
        sa.Column(
            "value",
            sa.String(length=255),
            nullable=False,
            comment="Тип коммуникации",
        ),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.ForeignKeyConstraint(
            ["channel_type_id"],
            ["communication_channel_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_index(
        op.f("ix_communication_channels_entity_type"),
        "communication_channels",
        ["entity_type"],
        unique=False,
    )
    op.create_table(
        "contracts",
        sa.Column(
            "shipping_company_id",
            sa.UUID(),
            nullable=False,
            comment="Фирма отгрузки",
        ),
        sa.Column(
            "company_id", sa.UUID(), nullable=False, comment="Фирма покупатель"
        ),
        sa.Column(
            "type_contract",
            sa.String(),
            nullable=False,
            comment="Вид договора",
        ),
        sa.Column(
            "number_contract",
            sa.String(),
            nullable=False,
            comment="Номер договора",
        ),
        sa.Column(
            "date_contract", sa.Date(), nullable=False, comment="Дата договора"
        ),
        sa.Column(
            "period_contract",
            sa.Date(),
            nullable=True,
            comment="Срок действия договора",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["shipping_company_id"],
            ["shipping_companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "deals",
        sa.Column(
            "title", sa.String(), nullable=False, comment="Название сделки"
        ),
        sa.Column(
            "additional_info",
            sa.String(),
            nullable=True,
            comment="Дополнительная информация",
        ),
        sa.Column(
            "probability",
            sa.Integer(),
            nullable=True,
            comment="Вероятность успеха (0-100)",
        ),
        sa.Column(
            "is_manual_opportunity",
            sa.Boolean(),
            nullable=False,
            comment="Ручной ввод суммы",
        ),
        sa.Column("closed", sa.Boolean(), nullable=False, comment="Завершена"),
        sa.Column(
            "is_new", sa.Boolean(), nullable=False, comment="Новая сделка"
        ),
        sa.Column(
            "is_recurring",
            sa.Boolean(),
            nullable=False,
            comment="Регулярная сделка",
        ),
        sa.Column(
            "is_return_customer",
            sa.Boolean(),
            nullable=False,
            comment="Повторный клиент",
        ),
        sa.Column(
            "is_repeated_approach",
            sa.Boolean(),
            nullable=False,
            comment="Повторное обращение",
        ),
        sa.Column(
            "is_shipment_approved",
            sa.Boolean(),
            nullable=True,
            comment="Разрешение на отгрузку",
        ),
        sa.Column(
            "is_shipment_approved_invoice",
            sa.Boolean(),
            nullable=True,
            comment="Разрешение на отгрузку счета",
        ),
        sa.Column(
            "opportunity", sa.Float(), nullable=False, comment="Сумма сделки"
        ),
        sa.Column(
            "payment_grace_period",
            sa.Integer(),
            nullable=True,
            comment="Отсрочка платежа (дни)",
        ),
        sa.Column(
            "begindate",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата начала",
        ),
        sa.Column(
            "closedate",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата завершения",
        ),
        sa.Column(
            "moved_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Время перемещения",
        ),
        sa.Column(
            "payment_deadline",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Срок оплаты",
        ),
        sa.Column(
            "printed_form_id",
            sa.String(),
            nullable=True,
            comment="ID печатной формы",
        ),
        sa.Column(
            "stage_semantic_id",
            postgresql.ENUM(
                "PROSPECTIVE", "SUCCESS", "FAIL", name="deal_stage_enum"
            ),
            nullable=False,
            comment="Семантика стадии",
        ),
        sa.Column(
            "payment_type",
            sa.Integer(),
            # models.enums.DualTypePayment(),
            nullable=False,
            comment="Тип оплаты",
        ),
        sa.Column(
            "shipment_type",
            sa.Integer(),
            # models.enums.DualTypeShipment(),
            nullable=False,
            comment="Тип отгрузки для сделок",
        ),
        sa.Column(
            "processing_status",
            postgresql.ENUM(
                "OK",
                "AT_RISK",
                "OVERDUE",
                "NOT_DEFINE",
                name="processing_status_enum",
            ),
            nullable=False,
            comment="Статус обработки",
        ),
        sa.Column("currency_id", sa.String(), nullable=True),
        sa.Column("type_id", sa.String(), nullable=True),
        sa.Column("stage_id", sa.String(), nullable=False),
        sa.Column("lead_id", sa.Integer(), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("contact_id", sa.Integer(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("source_id", sa.String(), nullable=True),
        sa.Column("main_activity_id", sa.Integer(), nullable=True),
        sa.Column("lead_type_id", sa.String(), nullable=True),
        sa.Column("invoice_stage_id", sa.String(), nullable=True),
        sa.Column("current_stage_id", sa.String(), nullable=True),
        sa.Column("shipping_company_id", sa.Integer(), nullable=True),
        sa.Column("creation_source_id", sa.Integer(), nullable=True),
        sa.Column("warehouse_id", sa.Integer(), nullable=True),
        sa.Column("deal_failure_reason_id", sa.Integer(), nullable=True),
        sa.Column(
            "moved_by_id",
            sa.Integer(),
            nullable=True,
            comment="ID переместившего",
        ),
        sa.Column(
            "defect_expert_id",
            sa.Integer(),
            nullable=True,
            comment="ID эксперта по дефектам",
        ),
        sa.Column(
            "defect_conclusion",
            sa.String(),
            nullable=True,
            comment="Заключение по дефектам",
        ),
        sa.Column("parent_deal_id", sa.Integer(), nullable=True),
        sa.Column(
            "yaclientid", sa.String(), nullable=True, comment="yaclientid"
        ),
        sa.Column(
            "originator_id",
            sa.String(),
            nullable=True,
            comment="ID источника данных",
        ),
        sa.Column(
            "origin_id",
            sa.String(),
            nullable=True,
            comment="ID элемента в источнике",
        ),
        sa.Column(
            "comments", sa.String(), nullable=True, comment="Комментарии"
        ),
        sa.Column(
            "source_description",
            sa.String(),
            nullable=True,
            comment="Описание источника",
        ),
        sa.Column(
            "source_external",
            sa.String(),
            nullable=True,
            comment="Внешний источник",
        ),
        sa.Column("city", sa.String(), nullable=True, comment="Город"),
        sa.Column(
            "opened", sa.Boolean(), nullable=False, comment="Доступна для всех"
        ),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.Column(
            "date_create",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата создания",
        ),
        sa.Column(
            "date_modify",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата изменения",
        ),
        sa.Column(
            "last_activity_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Время последней активности",
        ),
        sa.Column(
            "last_communication_time",
            sa.DateTime(),
            nullable=True,
            comment="Время последней коммуникации",
        ),
        sa.Column(
            "assigned_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID ответственного",
        ),
        sa.Column(
            "created_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID создателя",
        ),
        sa.Column(
            "modify_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID изменившего",
        ),
        sa.Column(
            "last_activity_by",
            sa.Integer(),
            nullable=True,
            comment="ID последней активности",
        ),
        sa.Column(
            "mgo_cc_entry_id", sa.String(), nullable=True, comment="ID звонка"
        ),
        sa.Column(
            "mgo_cc_channel_type",
            sa.String(),
            nullable=True,
            comment="Канал обращения",
        ),
        sa.Column(
            "mgo_cc_result",
            sa.String(),
            nullable=True,
            comment="Результат обращения",
        ),
        sa.Column(
            "mgo_cc_entry_point",
            sa.String(),
            nullable=True,
            comment="Точка входа обращения",
        ),
        sa.Column(
            "mgo_cc_create",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время создания обращения",
        ),
        sa.Column(
            "mgo_cc_end",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время завершения обращения",
        ),
        sa.Column(
            "mgo_cc_tag_id",
            sa.String(),
            nullable=True,
            comment="Тематики обращения",
        ),
        sa.Column(
            "calltouch_site_id",
            sa.String(),
            nullable=True,
            comment="ID сайта в Calltouch",
        ),
        sa.Column(
            "calltouch_call_id",
            sa.String(),
            nullable=True,
            comment="ID звонка в Calltouch",
        ),
        sa.Column(
            "calltouch_request_id",
            sa.String(),
            nullable=True,
            comment="ID заявки в Calltouch",
        ),
        sa.Column(
            "wz_instagram", sa.String(), nullable=True, comment="Instagram"
        ),
        sa.Column("wz_vc", sa.String(), nullable=True, comment="VC"),
        sa.Column(
            "wz_telegram_username",
            sa.String(),
            nullable=True,
            comment="Telegram username",
        ),
        sa.Column(
            "wz_telegram_id", sa.String(), nullable=True, comment="Telegram Id"
        ),
        sa.Column("wz_avito", sa.String(), nullable=True, comment="Avito"),
        sa.Column(
            "utm_source",
            sa.String(),
            nullable=True,
            comment="Рекламная система",
        ),
        sa.Column(
            "utm_medium", sa.String(), nullable=True, comment="Тип трафика"
        ),
        sa.Column(
            "utm_campaign",
            sa.String(),
            nullable=True,
            comment="Обозначение рекламной кампании",
        ),
        sa.Column(
            "utm_content",
            sa.String(),
            nullable=True,
            comment="Содержание кампании",
        ),
        sa.Column(
            "utm_term", sa.String(), nullable=True, comment="Тип трафика"
        ),
        sa.CheckConstraint("external_id > 0", name="external_id_positive"),
        sa.CheckConstraint(
            "opportunity >= 0", name="non_negative_opportunity"
        ),
        sa.CheckConstraint(
            "probability IS NULL OR (probability BETWEEN 0 AND 100)",
            name="valid_probability_range",
        ),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contacts.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["creation_source_id"],
            ["creation_sources.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currencies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["current_stage_id"],
            ["deal_stages.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["deal_failure_reason_id"],
            ["deal_failure_reasons.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["defect_expert_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["invoice_stage_id"],
            ["invoice_stages.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["last_activity_by"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["lead_id"],
            ["leads.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["lead_type_id"],
            ["deal_types.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["main_activity_id"],
            ["main_activites.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["modify_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["moved_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_deal_id"],
            ["deals.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["shipping_company_id"],
            ["shipping_companies.ext_alt_id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["sources.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["stage_id"],
            ["deal_stages.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["deal_types.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["warehouse_id"],
            ["warehouses.external_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "defect_types",
        # sa.Column("deal_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        # sa.ForeignKeyConstraint(
        #    ["deal_id"],
        #    ["deals.id"],
        # ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "invoices",
        sa.Column(
            "title", sa.String(), nullable=False, comment="Название сделки"
        ),
        sa.Column(
            "account_number", sa.String(), nullable=True, comment="Номер счёта"
        ),
        sa.Column("xml_id", sa.String(), nullable=True, comment="Внешний код"),
        sa.Column(
            "proposal_id", sa.Integer(), nullable=True, comment="Предложение"
        ),
        sa.Column(
            "category_id", sa.Integer(), nullable=True, comment="Воронка"
        ),
        sa.Column(
            "is_manual_opportunity",
            sa.Boolean(),
            nullable=False,
            comment="Ручной ввод суммы",
        ),
        sa.Column(
            "is_shipment_approved",
            sa.Boolean(),
            nullable=True,
            comment="Разрешение на отгрузку",
        ),
        sa.Column(
            "check_repeat",
            sa.Boolean(),
            nullable=True,
            comment="Счёт проверка на повтор",
        ),
        sa.Column(
            "is_loaded", sa.Boolean(), nullable=True, comment="Выгружено в 1с"
        ),
        sa.Column(
            "opportunity", sa.Float(), nullable=False, comment="Сумма сделки"
        ),
        sa.Column(
            "payment_grace_period",
            sa.Integer(),
            nullable=True,
            comment="Отсрочка платежа (дни)",
        ),
        sa.Column(
            "begindate",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата выставления",
        ),
        sa.Column(
            "closedate",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Срок оплаты",
        ),
        sa.Column(
            "moved_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата изменения стадии",
        ),
        sa.Column(
            "last_call_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата последнего звонка",
        ),
        sa.Column(
            "last_email_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата последнего e-mail",
        ),
        sa.Column(
            "last_imol_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата последнего диалога в открытой линии",
        ),
        sa.Column(
            "last_webform_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата последнего заполнения CRM-формы",
        ),
        sa.Column(
            "printed_form_id",
            sa.String(),
            nullable=True,
            comment="ID печатной формы",
        ),
        sa.Column(
            "payment_method",
            postgresql.ENUM(
                "CASH",
                "CASHLESS",
                "SETTLEMENT",
                "NOT_DEFINE",
                name="payment_method_enum",
            ),
            nullable=False,
            comment="форма оплаты",
        ),
        sa.Column(
            "payment_type",
            sa.Integer(),
            # models.enums.DualTypePayment(),
            nullable=False,
            comment="Тип оплаты",
        ),
        sa.Column(
            "shipment_type",
            sa.Integer(),
            # models.enums.DualTypeShipment(),
            nullable=False,
            comment="Тип отгрузки для счетов",
        ),
        sa.Column("currency_id", sa.String(), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("contact_id", sa.Integer(), nullable=True),
        sa.Column("deal_id", sa.Integer(), nullable=True),
        sa.Column("invoice_stage_id", sa.String(), nullable=True),
        sa.Column("previous_stage_id", sa.String(), nullable=True),
        sa.Column("current_stage_id", sa.String(), nullable=True),
        sa.Column("source_id", sa.String(), nullable=True),
        sa.Column("main_activity_id", sa.Integer(), nullable=True),
        sa.Column("warehouse_id", sa.Integer(), nullable=True),
        sa.Column("creation_source_id", sa.Integer(), nullable=True),
        sa.Column("invoice_failure_reason_id", sa.Integer(), nullable=True),
        sa.Column("shipping_company_id", sa.Integer(), nullable=True),
        sa.Column("type_id", sa.String(), nullable=True),
        sa.Column(
            "moved_by_id",
            sa.Integer(),
            nullable=True,
            comment="Кто изменил стадию",
        ),
        sa.Column(
            "yaclientid", sa.String(), nullable=True, comment="yaclientid"
        ),
        sa.Column(
            "comments", sa.String(), nullable=True, comment="Комментарии"
        ),
        sa.Column(
            "source_description",
            sa.String(),
            nullable=True,
            comment="Описание источника",
        ),
        sa.Column(
            "source_external",
            sa.String(),
            nullable=True,
            comment="Внешний источник",
        ),
        sa.Column("city", sa.String(), nullable=True, comment="Город"),
        sa.Column(
            "opened", sa.Boolean(), nullable=False, comment="Доступна для всех"
        ),
        sa.Column(
            "external_id",
            sa.Integer(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.Column(
            "date_create",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата создания",
        ),
        sa.Column(
            "date_modify",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Дата изменения",
        ),
        sa.Column(
            "last_activity_time",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Время последней активности",
        ),
        sa.Column(
            "last_communication_time",
            sa.DateTime(),
            nullable=True,
            comment="Время последней коммуникации",
        ),
        sa.Column(
            "assigned_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID ответственного",
        ),
        sa.Column(
            "created_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID создателя",
        ),
        sa.Column(
            "modify_by_id",
            sa.Integer(),
            nullable=False,
            comment="ID изменившего",
        ),
        sa.Column(
            "last_activity_by",
            sa.Integer(),
            nullable=True,
            comment="ID последней активности",
        ),
        sa.Column(
            "mgo_cc_entry_id", sa.String(), nullable=True, comment="ID звонка"
        ),
        sa.Column(
            "mgo_cc_channel_type",
            sa.String(),
            nullable=True,
            comment="Канал обращения",
        ),
        sa.Column(
            "mgo_cc_result",
            sa.String(),
            nullable=True,
            comment="Результат обращения",
        ),
        sa.Column(
            "mgo_cc_entry_point",
            sa.String(),
            nullable=True,
            comment="Точка входа обращения",
        ),
        sa.Column(
            "mgo_cc_create",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время создания обращения",
        ),
        sa.Column(
            "mgo_cc_end",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Дата/время завершения обращения",
        ),
        sa.Column(
            "mgo_cc_tag_id",
            sa.String(),
            nullable=True,
            comment="Тематики обращения",
        ),
        sa.Column(
            "calltouch_site_id",
            sa.String(),
            nullable=True,
            comment="ID сайта в Calltouch",
        ),
        sa.Column(
            "calltouch_call_id",
            sa.String(),
            nullable=True,
            comment="ID звонка в Calltouch",
        ),
        sa.Column(
            "calltouch_request_id",
            sa.String(),
            nullable=True,
            comment="ID заявки в Calltouch",
        ),
        sa.Column(
            "wz_instagram", sa.String(), nullable=True, comment="Instagram"
        ),
        sa.Column("wz_vc", sa.String(), nullable=True, comment="VC"),
        sa.Column(
            "wz_telegram_username",
            sa.String(),
            nullable=True,
            comment="Telegram username",
        ),
        sa.Column(
            "wz_telegram_id", sa.String(), nullable=True, comment="Telegram Id"
        ),
        sa.Column("wz_avito", sa.String(), nullable=True, comment="Avito"),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contacts.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["creation_source_id"],
            ["creation_sources.ext_alt_id"],
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currencies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["current_stage_id"],
            ["invoice_stages.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["deal_id"],
            ["deals.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["invoice_failure_reason_id"],
            ["deal_failure_reasons.ext_alt4_id"],
        ),
        sa.ForeignKeyConstraint(
            ["invoice_stage_id"],
            ["invoice_stages.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["last_activity_by"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["main_activity_id"],
            ["main_activites.ext_alt4_id"],
        ),
        sa.ForeignKeyConstraint(
            ["modify_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["moved_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["previous_stage_id"],
            ["invoice_stages.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["shipping_company_id"],
            ["shipping_companies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["sources.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["deal_types.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["warehouse_id"],
            ["warehouses.ext_alt_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "billings",
        sa.Column(
            "payment_method",
            postgresql.ENUM(
                "CASH",
                "CASHLESS",
                "SETTLEMENT",
                "NOT_DEFINE",
                name="payment_method_enum",
            ),
            nullable=False,
            comment="форма оплаты",
        ),
        sa.Column(
            "amount", sa.Float(), nullable=False, comment="Сумма платежа"
        ),
        sa.Column(
            "date_payment", sa.Date(), nullable=False, comment="Дата платежа"
        ),
        sa.Column("number", sa.String(), nullable=False),
        sa.Column("invoice_id", sa.Integer(), nullable=False),
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.ForeignKeyConstraint(
            ["invoice_id"],
            ["invoices.external_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    op.create_table(
        "delivery_notes",
        sa.Column(
            "opportunity", sa.Float(), nullable=False, comment="Сумма сделки"
        ),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column(
            "assigned_by_id",
            sa.Integer(),
            nullable=True,
            comment="ID ответственного",
        ),
        sa.Column("invoice_id", sa.Integer(), nullable=True),
        sa.Column("shipping_company_id", sa.Integer(), nullable=True),
        sa.Column("warehouse_id", sa.Integer(), nullable=True),
        sa.Column(
            "external_id",
            sa.String(),
            nullable=False,
            comment="ID во внешней системе",
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
            comment="Уникальный идентификатор",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время последнего обновления",
        ),
        sa.Column(
            "is_deleted_in_bitrix",
            sa.Boolean(),
            nullable=False,
            comment="Удалён в Битрикс",
            server_default="false",
        ),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["invoice_id"],
            ["invoices.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["shipping_company_id"],
            ["shipping_companies.external_id"],
        ),
        sa.ForeignKeyConstraint(
            ["warehouse_id"],
            ["warehouses.external_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("external_id"),
    )
    # ### end Alembic commands ###

    op.create_foreign_key(
        "fk_companies_contact_id_contacts",
        "companies",
        "contacts",
        ["contact_id"],
        ["external_id"],
        deferrable=True,
        initially="DEFERRED",
    )
    op.create_foreign_key(
        "fk_contacts_company_id_companies",
        "contacts",
        "companies",
        ["company_id"],
        ["external_id"],
        deferrable=True,
        initially="DEFERRED",
    )
    op.create_foreign_key(
        "fk_companies_lead_id_leads",
        "companies",
        "leads",
        ["lead_id"],
        ["external_id"],
        deferrable=True,
        initially="DEFERRED",
    )
    op.create_foreign_key(
        "fk_leads_company_id_companies",
        "leads",
        "companies",
        ["company_id"],
        ["external_id"],
        deferrable=True,
        initially="DEFERRED",
    )
    op.create_foreign_key(
        "fk_contacts_lead_id_leads",
        "contacts",
        "leads",
        ["lead_id"],
        ["external_id"],
        deferrable=True,
        initially="DEFERRED",
    )
    op.create_foreign_key(
        "fk_leads_contact_id_contacts",
        "leads",
        "contacts",
        ["contact_id"],
        ["external_id"],
        deferrable=True,
        initially="DEFERRED",
    )

    bulk_insert("categories", ["name", "external_id"], CATEGORY_VALUES)
    bulk_insert("contact_types", ["name", "external_id"], CONTACT_TYPE_VALUES)
    bulk_insert(
        "currencies",
        ["name", "external_id", "rate", "nominal"],
        CURRENCY_VALUES,
    )
    bulk_insert(
        "main_activites",
        [
            "name",
            "external_id",
            "ext_alt_id",
            "ext_alt2_id",
            "ext_alt3_id",
            "ext_alt4_id",
        ],
        MAIN_ACTIVITY_VALUES,
    )
    bulk_insert("deal_types", ["name", "external_id"], DEAL_TYPE_VALUES)
    bulk_insert(
        "deal_stages", ["name", "external_id", "sort_order"], DEAL_STAGE_VALUES
    )
    bulk_insert("sources", ["name", "external_id"], SOURCE_VALUES)
    bulk_insert(
        "creation_sources",
        ["name", "external_id", "ext_alt_id"],
        CREATION_SOURCE_VALUES,
    )
    bulk_insert(
        "invoice_stages",
        ["name", "external_id", "sort_order"],
        INVOICE_STAGE_VALUES,
    )
    bulk_insert(
        "shipping_companies",
        ["name", "external_id", "ext_alt_id"],
        SHIPPING_COMPANY_VALUES,
    )
    bulk_insert(
        "warehouses", ["name", "external_id", "ext_alt_id"], WAREHOUSE_VALUES
    )
    bulk_insert("defect_types", ["name", "external_id"], DEFECT_TYPE_VALUES)
    bulk_insert(
        "deal_failure_reasons",
        [
            "name",
            "external_id",
            "ext_alt_id",
            "ext_alt2_id",
            "ext_alt3_id",
            "ext_alt4_id",
        ],
        DEAL_FAILURE_REASON_VALUES,
    )
    bulk_insert(
        "lead_statuses",
        ["name", "external_id", "sort_order"],
        LEAD_STATUS_VALUES,
    )
    bulk_insert("industries", ["name", "external_id"], INDUSTRY_VALUES)
    bulk_insert("employees", ["name", "external_id"], EMPLORRS_VALUES)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("delivery_notes")
    op.drop_table("billings")
    op.drop_table("invoices")
    op.drop_table("defect_types")
    op.drop_table("deals")
    op.drop_table("users")
    op.drop_table("contracts")
    op.drop_index(
        op.f("ix_communication_channels_entity_type"),
        table_name="communication_channels",
    )
    op.drop_table("communication_channels")
    op.drop_table("warehouses")
    op.drop_table("sources")
    op.drop_table("shipping_companies")
    op.drop_table("main_activites")
    op.drop_table("leads")
    op.drop_table("lead_statuses")
    op.drop_table("invoice_stages")
    op.drop_table("industries")
    op.drop_table("employees")
    op.drop_table("departments")
    op.drop_table("deal_types")
    op.drop_table("deal_stages")
    op.drop_table("deal_failure_reasons")
    op.drop_table("currencies")
    op.drop_table("creation_sources")
    op.drop_table("contacts")
    op.drop_table("contact_types")
    op.drop_table("companies")
    op.drop_table("communication_channel_types")
    op.drop_table("categories")
    # ### end Alembic commands ###
    op.execute("DROP TYPE IF EXISTS payment_method_enum")
    op.execute("DROP TYPE IF EXISTS processing_status_enum")
    op.execute("DROP TYPE IF EXISTS deal_stage_enum")
