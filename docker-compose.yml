services:
  bp_sync:
    build:
      context: ./bp_sync
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy

  bp_sync-migrations:
    build:
      context: ./bp_sync
      dockerfile: Dockerfile
    restart: no
    depends_on:
      db:
        condition: service_healthy
    command: alembic upgrade head

  bp_sync-test:
    build:
      context: ./bp_sync
      dockerfile: Dockerfile_tests
    restart: no

  db:
    image: postgres:17.4-bookworm
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -h localhost -U $${POSTGRES_USER} -c select 1 -d $${POSTGRES_DB}"]
      interval: 5s
      retries: 5
      start_period: 0s
      timeout: 10s

  redis:
    image: redis:7-alpine
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD} --save 60 1 --appendonly yes
    volumes:
      - redis-data:/data

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.12-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  db_data:
  redis-data:
